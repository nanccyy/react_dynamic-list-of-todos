{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.js","index.js"],"names":["TodoList","todos","selectUser","filterTodosByTitle","todoStart","filterTodosByCompleteness","completed","className","htmlFor","type","id","onChange","event","target","value","filter","todo","title","getFiltered","startsWith","map","key","checked","readOnly","onClick","userId","defaultProps","CurrentUser","resetUser","name","email","phone","API_URL","getAll","a","fetch","response","json","getUser","data","App","state","saveId","selectedUserId","setState","componentDidMount","then","componentDidUpdate","items","getUserProps","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df938570.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos,\n  selectUser,\n  filterTodosByTitle,\n  todoStart,\n  filterTodosByCompleteness,\n  completed }) => {\n  function getFiltered(todo) {\n    return (todo.title && typeof (completed) === 'boolean')\n      ? todo.completed === completed\n      : todo.title;\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <label htmlFor=\"sortTodo\">Sort Todos </label>\n      <input\n        type=\"text\"\n        id=\"sortTodo\"\n        onChange={(event) => {\n          filterTodosByTitle(event.target.value);\n        }}\n      />\n      <select onChange={event => filterTodosByCompleteness(event.target.value)}>\n        <option>All</option>\n        <option>Active</option>\n        <option>Completed</option>\n      </select>\n      <h2>Todos:</h2>\n\n      <ul className=\"TodoList__list\">\n\n        {todos\n          .filter(todo => getFiltered(todo))\n          .filter(todo => todo.title.startsWith(todoStart))\n          .map(todo => (\n            <li className=\"TodoList__item\" key={todo.id}>\n              <label>\n                <input type=\"checkbox\" checked={!!todo.completed} readOnly />\n                {todo.title}\n              </label>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  selectUser(todo.userId);\n                }}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n\n      </ul>\n    </div>\n\n  );\n};\n\nTodoList.defaultProps = {\n  todoStart: '',\n  completed: null,\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  filterTodosByTitle: PropTypes.func.isRequired,\n  todoStart: PropTypes.string,\n  filterTodosByCompleteness: PropTypes.func.isRequired,\n  completed: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ resetUser, id, name, email, phone }) => (\n  <div className=\"CurrentUser\">\n    <h2>\n      Selected user:\n      {id}\n    </h2>\n    <ul>\n      <li>{name}</li>\n      <li>{email}</li>\n      <li>{phone}</li>\n    </ul>\n    <button type=\"button\" onClick={resetUser}>Clear</button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  resetUser: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com/`;\n\nexport const getAll = async() => {\n  const response = await fetch(`${API_URL}todos`);\n\n  return response.json();\n};\n\nexport const getUser = async(userId) => {\n  const response = await fetch(`${API_URL}users/${userId}`);\n  const data = response.json();\n\n  return data;\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAll, getUser } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    saveId: 0,\n    selectedUserId: 0,\n    todoStart: '',\n  };\n\n  resetUser = () => {\n    this.setState({\n      selectedUserId: 0,\n      saveId: 0,\n    });\n  }\n\n  componentDidMount = () => {\n    getAll().then(todo => (\n      this.setState(\n        { todos: todo.data },\n      )\n    ));\n  }\n\n  selectUser = (userId) => {\n    if (userId) {\n      this.setState(state => ({\n        saveId: state.selectedUserId,\n        selectedUserId: userId,\n      }));\n    }\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.saveId !== this.state.selectedUserId) {\n      const getUserProps = async() => {\n        const items = await getUser(this.state.selectedUserId);\n\n        this.setState(state => ({\n          id: items.data.id,\n          name: items.data.name,\n          email: items.data.email,\n          phone: items.data.phone,\n          saveId: state.selectedUserId,\n        }));\n      };\n\n      getUserProps();\n    }\n  }\n\n  filterTodosByTitle = (value) => {\n    this.setState({\n      todoStart: value,\n    });\n  }\n\n  filterTodosByCompleteness = (value) => {\n    switch (value) {\n      case 'Active':\n        this.setState({\n          completed: false,\n        });\n        break;\n\n      case 'Completed':\n        this.setState({\n          completed: true,\n        });\n        break;\n\n      default:\n        this.setState({\n          completed: null,\n        });\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      id,\n      name,\n      email,\n      phone,\n      todoStart,\n      completed,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            todoStart={todoStart}\n            filterTodosByTitle={this.filterTodosByTitle}\n            filterTodosByCompleteness={this.filterTodosByCompleteness}\n            completed={completed}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId && name ? (\n            <CurrentUser\n              userId={selectedUserId}\n              resetUser={this.resetUser}\n              id={id}\n              name={name}\n              email={email}\n              phone={phone}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}